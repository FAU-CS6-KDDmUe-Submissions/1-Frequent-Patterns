name: Autograding Tests
on:
  - push
  - workflow_dispatch
  - repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Grading of Task 1.1 - Apriori:_generate_one_itemsets
      id: apriorigenerateoneitemsets
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '2'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/apriori/test_generate_one_itemsets.py'
    - name: Grading of Task 1.2 - Apriori:_count_occurrences_of_itemsets
      id: aprioricountoccurrencesofitemsets
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '2'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/apriori/test_count_occurrences_of_itemsets.py'
    - name: Grading of Task 1.3 - Apriori:_prune_itemsets_below_min_support
      id: aprioripruneitemsetsbelowminsupport
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '2'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/apriori/test_prune_itemsets_below_min_support.py'
    - name: Grading of Task 1.4 - Apriori:_generate_candidate_itemsets
      id: apriorigeneratecandidateitemsets
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '5'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/apriori/test_generate_candidate_itemsets.py'
    - name: Grading of Task 1.5 - Apriori:_fit.py
      id: apriorifit
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '5'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/apriori/test_fit.py'
    - name: Grading of Task 2.1 - FPgrowth:generate_frequent_one_itemsets_with_occurrence_counts
      id: fpgrowthgeneratefrequentoneitemsetswithoccurrencecounts
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '3'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_generate_frequent_one_itemsets_with_occurrence_counts.py'
    - name: Grading of Task 2.2 - FPgrowth:generate_f_list
      id: fpgrowthgenerateflist
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '2'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_generate_f_list.py'
    - name: Grading of Task 2.3 - FPgrowth:sort_dataset_according_to_f_list
      id: fpgrowthsortdatasetaccordingtoflist
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '4'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_sort_dataset_according_to_f_list.py'
    - name: Grading of Task 2.4 - FPgrowth:construct_initial_fp_tree
      id: fpgrowthconstructinitialfptree
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '3'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_construct_initial_fp_tree.py'
    - name: Grading of Task 2.5 - FPgrowth:get_conditional_pattern_base
      id: fpgrowthgetconditionalpatternbase
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '5'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_get_conditional_pattern_base.py'
    - name: Grading of Task 2.6 - FPgrowth:construct_conditional_fp_tree
      id: fpgrowthconstructconditionalfptree
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '3'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_construct_conditional_fp_tree.py'
    - name: Grading of Task 2.7 - FPgrowth:fit
      id: fpgrowthfit
      uses: FAU-CS6-KDDmUe-Submissions/Custom-Python-Autograder@v1
      with:
        timeout: '15'
        max-score: '4'
        setup-command: 'pip install -r requirements.txt'
        test-path: 'tests/fpgrowth/test_fit.py'
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        APRIORIGENERATEONEITEMSETS_RESULTS: "${{steps.apriorigenerateoneitemsets.outputs.result}}"
        APRIORICOUNTOCCURRENCESOFITEMSETS_RESULTS: "${{steps.aprioricountoccurrencesofitemsets.outputs.result}}"
        APRIORIPRUNEITEMSETSBELOWMINSUPPORT_RESULTS: "${{steps.aprioripruneitemsetsbelowminsupport.outputs.result}}"
        APRIORIGENERATECANDIDATEITEMSETS_RESULTS: "${{steps.apriorigeneratecandidateitemsets.outputs.result}}"
        APRIORIFIT_RESULTS: "${{steps.apriorifit.outputs.result}}"
        FPGROWTHGENERATEFREQUENTONEITEMSETSWITHOCCURRENCECOUNTS_RESULTS: "${{steps.fpgrowthgeneratefrequentoneitemsetswithoccurrencecounts.outputs.result}}"
        FPGROWTHGENERATEFLIST_RESULTS: "${{steps.fpgrowthgenerateflist.outputs.result}}"
        FPGROWTHSORTDATASETACCORDINGTOFLIST_RESULTS: "${{steps.fpgrowthsortdatasetaccordingtoflist.outputs.result}}"
        FPGROWTHCONSTRUCTINITIALFPTREE_RESULTS: "${{steps.fpgrowthconstructinitialfptree.outputs.result}}"
        FPGROWTHGETCONDITIONALPATTERNBASE_RESULTS: "${{steps.fpgrowthgetconditionalpatternbase.outputs.result}}"
        FPGROWTHCONSTRUCTCONDITIONALFPTREE_RESULTS: "${{steps.fpgrowthconstructconditionalfptree.outputs.result}}"
        FPGROWTHFIT_RESULTS: "${{steps.fpgrowthfit.outputs.result}}"
      with:
        runners: apriorigenerateoneitemsets, aprioricountoccurrencesofitemsets, aprioripruneitemsetsbelowminsupport, apriorigeneratecandidateitemsets, apriorifit, fpgrowthgeneratefrequentoneitemsetswithoccurrencecounts, fpgrowthgenerateflist, fpgrowthsortdatasetaccordingtoflist, fpgrowthconstructinitialfptree, fpgrowthgetconditionalpatternbase, fpgrowthconstructconditionalfptree, fpgrowthfit